<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bestcfm.dao.FoodDao">
  <resultMap id="BaseResultMap" type="com.bestcfm.bean.Food">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="foodName" jdbcType="VARCHAR" property="foodName" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="store" jdbcType="INTEGER" property="store" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="typeId" jdbcType="INTEGER" property="typeId" />
    <result column="signiture" jdbcType="INTEGER" property="signiture" />
    <result column="dataFlag" jdbcType="INTEGER" property="dataFlag" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, foodName, price, store, sales, introduce, typeId, signiture, dataFlag, createTime
  </sql>
  <select id="selectByExample" parameterType="com.bestcfm.bean.FoodExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from food
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    delete from food
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bestcfm.bean.FoodExample">
    <!--
    @mbggenerated
    -->
    delete from food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bestcfm.bean.Food">
    <!--
    @mbggenerated
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into food (foodName, price, store, 
      sales, introduce, typeId, 
      signiture, dataFlag, createTime
      )
    values (#{foodName,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{store,jdbcType=INTEGER}, 
      #{sales,jdbcType=INTEGER}, #{introduce,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{signiture,jdbcType=INTEGER}, #{dataFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bestcfm.bean.Food">
    <!--
    @mbggenerated
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="foodName != null">
        foodName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="store != null">
        store,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="typeId != null">
        typeId,
      </if>
      <if test="signiture != null">
        signiture,
      </if>
      <if test="dataFlag != null">
        dataFlag,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="foodName != null">
        #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="store != null">
        #{store,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="signiture != null">
        #{signiture,jdbcType=INTEGER},
      </if>
      <if test="dataFlag != null">
        #{dataFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bestcfm.bean.FoodExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update food
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.foodName != null">
        foodName = #{record.foodName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.store != null">
        store = #{record.store,jdbcType=INTEGER},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        typeId = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.signiture != null">
        signiture = #{record.signiture,jdbcType=INTEGER},
      </if>
      <if test="record.dataFlag != null">
        dataFlag = #{record.dataFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update food
    set id = #{record.id,jdbcType=INTEGER},
      foodName = #{record.foodName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      store = #{record.store,jdbcType=INTEGER},
      sales = #{record.sales,jdbcType=INTEGER},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      typeId = #{record.typeId,jdbcType=INTEGER},
      signiture = #{record.signiture,jdbcType=INTEGER},
      dataFlag = #{record.dataFlag,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bestcfm.bean.Food">
    <!--
    @mbggenerated
    -->
    update food
    <set>
      <if test="foodName != null">
        foodName = #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="store != null">
        store = #{store,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        typeId = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="signiture != null">
        signiture = #{signiture,jdbcType=INTEGER},
      </if>
      <if test="dataFlag != null">
        dataFlag = #{dataFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bestcfm.bean.Food">
    <!--
    @mbggenerated
    -->
    update food
    set foodName = #{foodName,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      store = #{store,jdbcType=INTEGER},
      sales = #{sales,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=VARCHAR},
      typeId = #{typeId,jdbcType=INTEGER},
      signiture = #{signiture,jdbcType=INTEGER},
      dataFlag = #{dataFlag,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>